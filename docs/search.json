[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "LABO 1",
    "section": "",
    "text": "Code\n# Librerías necesarias\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nsns.set(style=\"whitegrid\", palette=\"muted\")\n%matplotlib inline\n\n# Cargar dataset\ndf = pd.read_csv(\"data.csv\", sep=\";\", decimal=\",\", encoding='latin1')\ndf = df.replace(r'^\\s*$', pd.NA, regex=True)  # Reemplazar vacíos por NaN\n\n# Convertir columnas numéricas a float\nmeses = ['ene','feb','mar','abr','may','jun','jul','ago','sep','oct','nov','dic']\ndf[meses] = df[meses].apply(pd.to_numeric, errors='coerce')\n\n\n\nGráficos de barras - primeras 3 estaciones\n\n\nCode\nestaciones_unicas = df['NombreEstacion'].unique()[:3]\n\nfor estacion in estaciones_unicas:\n    df_est = df[df['NombreEstacion'] == estacion]\n    df_melt = df_est.melt(id_vars=['anio'], value_vars=meses,\n                          var_name='Mes', value_name='Precipitacion')\n    \n    plt.figure(figsize=(10,5))\n    sns.barplot(data=df_melt, x='Mes', y='Precipitacion', ci=None)\n    plt.title(f\"Precipitación mensual - {estacion}\")\n    plt.ylabel(\"Precipitación\")\n    plt.show()\n\n\nC:\\Users\\User\\AppData\\Local\\Temp\\ipykernel_11820\\825738579.py:9: FutureWarning: \n\nThe `ci` parameter is deprecated. Use `errorbar=None` for the same effect.\n\n  sns.barplot(data=df_melt, x='Mes', y='Precipitacion', ci=None)\n\n\n\n\n\n\n\n\n\nC:\\Users\\User\\AppData\\Local\\Temp\\ipykernel_11820\\825738579.py:9: FutureWarning: \n\nThe `ci` parameter is deprecated. Use `errorbar=None` for the same effect.\n\n  sns.barplot(data=df_melt, x='Mes', y='Precipitacion', ci=None)\n\n\n\n\n\n\n\n\n\nC:\\Users\\User\\AppData\\Local\\Temp\\ipykernel_11820\\825738579.py:9: FutureWarning: \n\nThe `ci` parameter is deprecated. Use `errorbar=None` for the same effect.\n\n  sns.barplot(data=df_melt, x='Mes', y='Precipitacion', ci=None)\n\n\n\n\n\n\n\n\n\n\n\nGráfico de correlación entre estaciones (enero)\n\n\nCode\n# Pivotar para tener estaciones como columnas\ndf_pivot = df.pivot(index='anio', columns='NombreEstacion', values='ene')\nplt.figure(figsize=(10,8))\nsns.heatmap(df_pivot.corr(), annot=True, cmap=\"coolwarm\", linewidths=0.5)\nplt.title(\"Correlación de precipitaciones - Mes de Enero\")\nplt.show()\n\n\n\n\n\n\n\n\n\n\n\nGráfico lineal de evolución de enero para todas las estaciones\n\n\nCode\nfor estacion in df['NombreEstacion'].unique():\n    df_est = df[df['NombreEstacion'] == estacion]\n    plt.figure(figsize=(12,5))\n    plt.plot(df_est['anio'], df_est['ene'], marker='o', label=estacion)\n    plt.title(f\"Evolución de precipitaciones en enero - {estacion}\")\n    plt.xlabel(\"Año\")\n    plt.ylabel(\"Precipitación\")\n    plt.grid(True)\n    plt.show()"
  }
]